services:
  fhir:
    image: hapiproject/hapi:latest
    restart: unless-stopped
    ports:
      - "8888:8080"
    networks:
      - local

  redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - local

  celery-worker:
    build: .
    command: python -m celery -A config.celery_app worker -l info
    restart: unless-stopped
    ports:
      - "8800:8000"
    networks:
      - local
    depends_on:
      - redis
      - fhir
      - db
    env_file:
    - .env

  db:
    image: postgres:16
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - local
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres

  django-api:
    build: .
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8000:8000"
    networks:
      - local
    depends_on:
      - fhir
      - redis
      - celery-worker
      - db

  prometheus:
    image: prom/prometheus
    restart: unless-stopped
    volumes:
      - "./.infra/prometheus.yaml:/etc/prometheus/prometheus.yml"
      - prometheus_data:/prometheus
    networks:
      - local
    ports:
      - "9090:9090"

  node-exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - local

  grafana:
    image: grafana/grafana
    restart: unless-stopped
    networks:
      - local
    ports:
      - '3000:3000'

networks:
  local:
    driver: bridge


volumes:
  postgres-data:
  prometheus_data: { }